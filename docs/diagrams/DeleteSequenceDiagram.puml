@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":DeleteCommandParser" as DeleteCommandParser LOGIC_COLOR
participant "d:DeleteCommand" as DeleteCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
participant "c: ConfirmDeletionCommand" as ConfirmDeletionCommand LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("delete 1")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("delete 1")
activate AddressBookParser

create DeleteCommandParser
AddressBookParser -> DeleteCommandParser
activate DeleteCommandParser

DeleteCommandParser --> AddressBookParser
deactivate DeleteCommandParser

AddressBookParser -> DeleteCommandParser : parse("1")
activate DeleteCommandParser

create DeleteCommand
DeleteCommandParser -> DeleteCommand
activate DeleteCommand

DeleteCommand --> DeleteCommandParser :
deactivate DeleteCommand

DeleteCommandParser --> AddressBookParser : d
deactivate DeleteCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
DeleteCommandParser -[hidden]-> AddressBookParser
destroy DeleteCommandParser

AddressBookParser --> LogicManager : d
deactivate AddressBookParser

LogicManager -> DeleteCommand : execute(m)
activate DeleteCommand

DeleteCommand -> Model : setPendingDeletion(person)
activate Model

Model --> DeleteCommand
deactivate Model

create CommandResult
DeleteCommand -> CommandResult
activate CommandResult

CommandResult --> DeleteCommand
deactivate CommandResult

DeleteCommand --> LogicManager : r
deactivate DeleteCommand

DeleteCommand -[hidden]-> LogicManager
destroy DeleteCommand

[<-- LogicManager
deactivate LogicManager

-> LogicManager : execute("y")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("y")
activate AddressBookParser

create ConfirmDeletionCommand
AddressBookParser -> ConfirmDeletionCommand
activate ConfirmDeletionCommand

ConfirmDeletionCommand --> AddressBookParser : c
deactivate ConfirmDeletionCommand

AddressBookParser --> LogicManager : c
deactivate AddressBookParser

LogicManager -> ConfirmDeletionCommand: execute("m")
activate ConfirmDeletionCommand

ConfirmDeletionCommand -> Model : getPendingDeletion()
activate Model

Model --> ConfirmDeletionCommand
deactivate Model

ConfirmDeletionCommand -> Model : deletePerson(person)
activate Model

Model --> ConfirmDeletionCommand
deactivate Model

create CommandResult
ConfirmDeletionCommand -> CommandResult
activate CommandResult

CommandResult --> ConfirmDeletionCommand
deactivate CommandResult

ConfirmDeletionCommand --> LogicManager
deactivate ConfirmDeletionCommand

ConfirmDeletionCommand -[hidden]-> LogicManager
destroy ConfirmDeletionCommand

[<-- LogicManager
deactivate LogicManager
@enduml
